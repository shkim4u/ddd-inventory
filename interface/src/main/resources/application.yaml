spring:
  profiles:
    active: local
---
spring:
  profiles:
    group:
      local: common
---
spring:
  profiles:
    group:
      dev: common
---
spring:
  config:
    activate:
      on-profile: common
  application:
    name: ddd-inventory
  integration:
    jmx:
      enabled: false
  jpa:
#    database: postgresql
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    open-in-view: false
  flyway:
    enabled: true
    validate-migration-naming: true
    locations: classpath:db/migration/common, classpath:db/migration/sample
    baseline-on-migrate: true
  sql:
    init:
      mode: never
  cloud:
    function:
      definition: orderEventsHandler    # Function Bean 이름
    stream:
      bindings:
        orderEventsHandler-in-0:        # [Function Bean 이름]-in-0
          destination: order.events
          group: order.queue
          binder: rabbit
          content-type: application/avro
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: user
                password: rabbitmq
                virtual-host: /
      rabbit:
        bindings:
          orderEventsHandler-in-0:
            consumer:
              bindQueue: true                # Queue 바인딩 활성화
              declareExchange: false         # Exchange는 Producer가 생성하므로 false
              durableSubscription: true      # 지속성 있는 구독 설정
server:
  address: 0.0.0.0
  port: ${PORT:8080}
  internal-port: 8200
  servlet:
    context-path: /
  tomcat:
    accept-count: 100
    threads:
      max: 200
      min-spare: 100
logging:
  level:
    root: INFO
    org.springframework.amqp: DEBUG
    org.springframework.rabbit: DEBUG
---
spring:
  config:
    activate:
      on-profile: local
  flyway:
    url: jdbc:postgresql://localhost:5432/inventory
    user: postgres
    password: postgres
  datasource:
    url: jdbc:postgresql://localhost:5432/inventory
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 50
      minimum-idle: 50
---
spring:
  config:
    activate:
      on-profile: dev
  flyway:
    url: jdbc:postgresql://postgresql.postgresql:5432/inventory
    user: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:postgresql.postgresql}:5432/inventory
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 50
      minimum-idle: 50
  cloud:
    stream:
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: ${RABBITMQ_HOST:rabbitmq.rabbitmq}
                port: ${RABBITMQ_PORT:5672}
                username: ${RABBITMQ_USERNAME:user}
                password: ${RABBITMQ_PASSWORD:rabbitmq}
                virtual-host: /
